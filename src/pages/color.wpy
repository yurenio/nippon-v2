<style lang="less">
.panel {
  padding: 20rpx;
  box-sizing: border-box;
  background-color: #f6f6f6;

  .content {
    height: 100%;
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3);
    border-radius: 5px;

    .color-card {
      height: 90%;
      padding-left: 40rpx;
      padding-right: 40rpx;
      padding-top: 100rpx;
      color: white;
      box-sizing: border-box;
      border-top-right-radius: 5px;
      border-top-left-radius: 5px;
      position: relative;
      overflow: hidden;

      .color-num {
        position: absolute;
        bottom: 100rpx;
        left: 40rpx;
      }

      text {
        display: block;
      }

      .name {
        font-size: 1.4rem;
        font-weight: bold;
      }

      .cname {
        font-size: 2.4rem;
        font-weight: bold;
      }

      .tag {
        font-size: 0.8rem;
      }

      .hexcolor {
        margin-bottom: 40rpx;
      }

      .rgbcolor,
      .hexcolor {
        font-size: 1.2rem;
      }
    }

    .copy-color {
      height: 10%;
      overflow: hidden;
      border-bottom-left-radius: 5px;
      border-bottom-right-radius: 5px;
      position: relative;
      display: flex;
      flex-direction: row;
      flex-wrap: nowrap;
      justify-content: center;
      align-items: center;
      background-color: white;

      .copy-hexcolor {
        height: 100%;
        width: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-grow: 1;

        .copy-hexcolor-text {
          width: 100%;
          text-align: center;
          border-right: 1px solid #ccc;
        }
      }

      .copy-rgb {
        height: 100%;
        width: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-grow: 1;
      }
    }
  }
}
</style>

<template>
  <view class="panel"
        style="height: {{ windowHeight }}px;">
    <view class="content">
      <view style="background-color: {{ selectColor.color }}; color: {{ selectColor.nameColor }};"
          class="color-card">
        <view>
          <text class="name">{{ selectColor.name }}</text>
          <text class="cname">{{ selectColor.cname }}</text>
        </view>
        <view class="color-num">
          <text class="tag">HexColor</text>
          <text class="hexcolor">{{ selectColor.color }}</text>
          <text class="tag">RGB</text>
          <text class="rgbcolor">R: {{ selectColor.rgb.r }}</text>
          <text class="rgbcolor">G: {{ selectColor.rgb.g }}</text>
          <text class="rgbcolor">B: {{ selectColor.rgb.b }}</text>
        </view>
      </view>
      <view class="copy-color">
        <view class="copy-hexcolor" @tap="copyHexcolor">
          <view class="copy-hexcolor-text">
            <text>Copy HexColor</text>
          </view>
        </view>
        <view class="copy-rgb" @tap="copyRGB">Copy RGB</view>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';

const tinycolor = require('tinycolor2');

export default class Color extends wepy.page {
  data = {
    windowHeight: null,
    selectColor: null
  };

  onShareAppMessage() {
    return {
      title: this.selectColor.cname + ' - 日本传统色',
      path: '/pages/color?id=' + this.selectColor.id,
      success: function(res) {
        wx.showToast({
          title: '转发成功',
          icon: 'success',
          duration: 1000
        });
      }
    };
  }

  copyHexcolor(event) {
    wx.setClipboardData({
      data: this.selectColor.color,
      success: function(res) {
        wx.getClipboardData({
          success: function(res) {
            if (!res.cancel) {
              wx.showToast({
                title: '复制成功',
                icon: 'success',
                duration: 1000
              });
            }
          }
        });
      }
    });
  }

  copyRGB(event) {
    wx.setClipboardData({
      data: tinycolor(this.selectColor.color).toRgbString(),
      success: function(res) {
        wx.getClipboardData({
          success: function(res) {
            if (!res.cancel) {
              wx.showToast({
                title: '复制成功',
                icon: 'success',
                duration: 1000
              });
            }
          }
        });
      }
    });
  }

  onLoad(options) {
    this.getSystemInfo();
    this.checkColor(options.id);
    this.setNavigationBarTitle();
  }

  getSystemInfo() {
    this.windowHeight = wx.getSystemInfoSync().windowHeight;
  }

  checkColor(id) {
    this.$parent.data.colors.forEach(element => {
      if (element.id === +id) {
        element.rgb = tinycolor(element.color).toRgb();
        this.selectColor = element;
        this.$apply();
      }
    });
  }

  setNavigationBarTitle() {
    let { name, cname } = this.data.selectColor;
    wx.setNavigationBarTitle({
      title: cname + ' ' + name
    });
  }
}
</script>
